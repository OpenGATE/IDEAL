[directories]
# INPUT_DICOM: top directory for finding DICOM input data
input dicom = TEMPLATE_INPUT

#INPUT_JOBS: directory where to store temporary job input data
tmpdir jobs = TEMPLATE_WORK

# PRIMARY OUTPUT_DICOM: obligatory
first output dicom = TEMPLATE_OUTPUT

# SECONDARY OUTPUT_DICOM: optional
second output dicom = 
#second output dicom = TEMPLATE_DATA_DIR/mnt/IDEAL_rw/idc_output/development

#LOGGING: where debugging logs are stored
logging = TEMPLATE_LOGS

#COMMISSIONING: top directory for storing site-specific data (beam models, HLUT tables, ...)
commissioning = TEMPLATE_COMMISSIONING_DATA

[mc stats]
# Ranges for the MC stats specification, in the IDC tab
# Statname = min defval max stepsize [default]
# Recommended: stepsize equals min value
# Integer ranges: not larger than 2e9*ncores!
# The lines with the "default" are enabled in the GUI by default (at least one should be enabled)
n minutes per job   =    5        20      10080    5
n ions per beam     =  100   1000000 1000000000  100   default
x pct unc in target =    0.1       1.        99.   0.1
# the following two settings define the behavior in case the user chooses 'x pct unc in target'
# the "max dose" is the the mean dose of the n largest dose values (reduce effect of large flukes)
n top voxels for mean dose max = 100
# the "mean uncertainty" is taken over the the voxels that have a dose larger than some fraction of the "max dose"
dose threshold as fraction in percent of mean dose max = 50.

[simulation]
# obligatory: over how many subjobs can we split the simulation?
number of cores = TEMPLATE_NUMBER_OF_CORES
number of threads = TEMPLATE_NUMBER_OF_THREADS
hyper threading = False
# for plans that havea CT and structure set:
# apply a mask on the dose distribution to force dose=0 outside of the external?
remove dose outside external = true
# gamma index calculation parameters
# dta_mm = distance parameter in mm
# dd_percent = relative dose difference parameter in percent
# thr_percent = threshold value in percent (of the max dose in the ref dose image)
# def = gamma value for target voxels with dose values below threshold
gamma index parameters dta_mm dd_percent thr_percent def = 3. 3. 5. -1.
# minimum resolution: this will be used to compute the max number of voxels per dimension
stop on script actor time interval [s] = 300
htcondor next job start delay [s] = 1
minimum dose grid resolution [mm] = 0.1
# choose whether or not to save the intermediate dose distributions to MHD files (for debugging)
run gamma analysis = false
write mhd unscaled dose = false
write mhd scaled dose = false
write mhd rbe dose = yes
write mhd physical dose = yes
write mhd plan dose = yes
write dicom rbe dose = yes
write dicom physical dose = yes
write dicom plan dose = yes

[physics]
proton physics list = QGSP_BIC_HP_EMZ
ion physics list = QGSP_BIC_HP_EMZ
max step size patient = 0.8
max step size phantom = 0.5
# RBE factor for protons
rbe factor protons = 1.1
# RBE model carbon: mMKM or LEM1lda
rbe model carbons = mMKM

[(tmp) correction factors]
default = 1.0
# replace this with correction factors for your own beamline 
ExampleBeamlineName proton = 1.00

[msw scaling]
# first value is the energy over which the scaling is applied
default = 0.0 1.0
ExampleBeamlineName proton =  0.0 1.0 
ExampleBeamlineName ION_6_12_6 = 0.0 1.0 

[condor memory]
# how much memory should condor allocate per job?
# Condor uses the unit "MB", which might mean either 1024*1024 bytes or 1000*1000 bytes.
condor memory request minimum [MB] = TEMPLATE_MIN_RAM_PER_CORE
condor memory request default [MB] = TEMPLATE_DEF_RAM_PER_CORE
condor memory request maximum [MB] = TEMPLATE_MAX_RAM_PER_NODE
condor memory fit proton ct = offset 1200 dosegrid 2.5e-05 ct 1.8e-06
condor memory fit proton phantom = offset 500.0 dosegrid 2.0e-05 nspots 0.0060
condor memory fit carbon ct = offset 1800 dosegrid 5e-05 
condor memory fit carbon phantom =  offset 1000.0 dosegrid 8.0e-06
# if e.g. a proton plan gets a dose grid of 200*200*200=8e6 voxels and a ct with 16e6 voxels
# then the memory fit gives 1200 + 8e6*2.5e-5 + 16e6 * 1.8e-6 = 1428.8 MB estimated max RAM usage

[materials]
# material data base is optional
# if specified here, it be the basename of a file in the "material" subdirectory to the commissioning directory
# default is GateMaterials.db
materials database = GateMaterials.db
# Optional: density tolerance, default is 0.01. Warning: if you use 0.001 for Carbons + Shielding (QMD) that will require >8GiB RAM!
hu density tolerance [g/cm3] = 0.01
# NIST materials and their densities
# TODO: get densities [g/cm3] from the G4 and GATE databases
# There are actually more that 300 materials defined in geant4
# I randomly picked a couple that seemed relevant for radiotherapy
G4_WATER = 1.0
G4_AIR = 0.00120479
G4_GRAPHITE = 2.21
G4_STAINLESS-STEEL = 8.0
G4_ALANINE = 1.42
PMMA = 1.195
Tungsten = 19.3
G4_Ti = 4.54

[user roles]
# username, alias1, alias2, ... = role
# The aliases can be used to identify (e.g. linux login name), but they will always be converted to the first listed "username".
# Possible values for "role" are: clinical, admin, commissioning.
TEMPLATE_CLINICAL_USER = clinical
TEMPLATE_COMMISSIONING_USER = commissioning
TEMPLATE_ADMIN_USER = admin
